#+TITLE: json2nd

* Usage

Filter to convert a JSON document with a top-level array to NDJSON (a.k.a NLJSON, new-line delimited JSON), which is generally much easier to work with, especially for a large file.

#+begin_src sh
  cat large_array.json | json2nd > object_per_line.json
#+end_src

Like a lot of filter programs you can switch from using stdin to a list of filenames, so now it acts a bit like a JSON cat that converts arrays:

#+begin_src sh
  json2nd large_array1.json large_array2.json > object_per_line.json
#+end_src

Although by default if we don't find an array this will be an error, you can apply the -tolerant flag to have json2nd do nothing in this case. Useful if you want to lazily ensure that the structure isn't an array.

#+begin_src sh
  echo "{}" | json2nd -tolerant > object.json # will contain {}
#+end_src

TODO: version which errors


* Installation

** Using Go

Assuming your $GOBIN directory is somewhere in your $PATH it's as simple as:

#+begin_src sh
  go install github.com/draxil/json2nd@latest
#+end_src

* Plans / what about XYZ?

** Windows style line endings ("\r\n")?

Maybe. Honesly would be getting beyond the simplicity of this thing, but I can see how it could be useful to some people. Bug me?

* Author / credits

Joe Higton <draxil@gmail.com>

* Licence

Please see the [[./LICENSE][licence file]].
